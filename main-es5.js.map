{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/demo-dialog.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","dialog","title","downloadLink","getLink","emailCC","email","emailSub","window","open","get","subscribe","values","length","value1","dialogRef","DialogOverviewExampleDialog","width","afterClosed","result","openDemo","contactUs","openDialog","selector","templateUrl","styleUrls","data","close","onNoClick","AppModule","declarations","providers","bootstrap","entryComponents","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnInit{\n\n  title = 'getMyApp';\n  downloadLink='https://drive.google.com/uc?export=download&id=12NqlIF_ESfK4gm0JWpd4N6FNk1PyQFTC';\n\n  constructor(private http: HttpClient,public dialog: MatDialog){\n    \n  }\n\n  ngOnInit(){\n    this.getLink();\n  }\n\n  contactUs(){\n    // console.log(\"clicked\");\n    let emailCC=\"soumya.c11@gmail.com\";\n    let email=\"geturapponline@gmail.com\";\n    let emailSub=\"Get My App Catalogue request\"\n      window.open('mailto:'+email+'?Subject='+emailSub, '_blank');\n  }\n\n  openDemo(){\n    window.open(this.downloadLink);\n    // this.getLink();\n  }\n  \n  getLink(){\n    this.http.get(\"https://osm-server.herokuapp.com/values/getAll/getMyAppDemoLink\").subscribe((values:Array<any>)=>{\n      if(values.length>0 && values[0].value1.length>0){\n        this.downloadLink=values[0].value1;\n      }\n    })\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == \"download\"){\n        this.openDemo();\n      }\n    });\n  }\n\n\n}\n\n\n\n@Component({\n  selector: 'demo-dialog',\n  templateUrl: 'demo-dialog.html',\n  styleUrls: ['./demo-dialog.scss'],\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data:any) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"home\">\n  <div class=\"headerr\">\n    <!-- Get My App -->\n    <img class=\"headerImg\" src=\"../assets/h3.png\" alt=\"img\">\n  </div>\n  <div class=\"placeholder\">\n    <p class=\"comSoon\">Website Coming Soon. Contact us for catalogue!</p>\n    <div role=\"button\" class=\"conBut\" (click)=\"contactUs()\">\n      <img class=\"buttonImg\" src=\"../assets/cont.png\" alt=\"img\">\n      <!-- <b>Contact Us</b> -->\n    </div>\n    <div role=\"button\" class=\"conBut\" (click)=\"openDialog()\">\n      <img class=\"buttonImg\" src=\"../assets/demo.png\" alt=\"img\">  \n    </div>\n  </div>\n  <div class=\"crt\">\n    <p>&copy; Soumyadip Chattopadhyay. 2020.</p>\n  </div>\n</div>","<div mat-dialog-content>\r\n  <p style=\"font-size: 80%;color: #64d0c3;\">Use Following Credetials to Login to the app!</p>\r\n  <p style=\"font-size: 70%;\">Username: testid</p>\r\n  <p style=\"font-size: 70%;\">Password: 4321</p>\r\n</div>\r\n<div mat-dialog-actions style=\"display: flex;justify-content: flex-end;\">\r\n  <button mat-button style=\"font-size: 70%;font-family: Ubuntu;\" (click)=\"onNoClick()\">Cancel</button>\r\n  <button mat-button style=\"font-size: 70%;font-family: Ubuntu;\" mat-dialog-close=\"download\" cdkFocusInitial>Download</button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import {MatDialogModule} from '@angular/material/dialog'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent, DialogOverviewExampleDialog } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatButtonModule, MatDialogModule} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogOverviewExampleDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatDialogModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents:[\n    DialogOverviewExampleDialog\n  ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}